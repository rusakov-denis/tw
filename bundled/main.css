/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

@font-face {
  font-family: 'Oswald';

  font-weight: 700;

  font-display: swap;

  font-style: normal;

  src:
      url('../themes/tw/fonts/Oswald/Bold.woff2') format('woff2'),
      url('../themes/tw/fonts/Oswald/Bold.ttf') format('truetype');
}

:root {
  --fly-container-w: 1024px;
  --fly-container-h: 555px;
  --fly-logo-w: 150px;
  --fly-logo-h: 70px;
  --fly-aspect: calc(16 / 9);
  --fly-duration-y: 7s;
  --fly-duration-x: calc(var(--fly-duration-y) * var(--fly-aspect));
}

.shower {
  --slide-ratio: calc(16 / 9);
  &.list {
    --tw-bg-opacity: 1;
    background-color: rgb(43 33 58 / var(--tw-bg-opacity));
  }
  &.list {
    .slide {
      border-radius: 0.375rem;
    }
  }
  &.full {
    --tw-bg-opacity: 1;
    background-color: rgb(15 23 42 / var(--tw-bg-opacity));
  }
  h1 {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
  h1 {
    font-family: Oswald, sans-serif;
  }
}

.slide {
  --tw-bg-opacity: 1;
  background-color: rgb(15 23 42 / var(--tw-bg-opacity));
  padding: 24px 90px 0;
  --tw-shadow: 0 20px 50px rgb(0 0 0 / 30%);
  --tw-shadow-colored: 0 20px 50px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  &::after {
    left: auto;
  }
  &::after {
    right: 0px;
  }
  &::after {
    margin-top: 1em;
  }
  &::after {
    height: auto;
  }
  &::after {
    width: calc(50px * 2.4);
  }
  &::after {
    padding: 0 0.5em 0 2.5em;
  }
  &::after {
    --tw-text-opacity: 1;
    color: rgb(15 23 42 / var(--tw-text-opacity));
  }
  &::after {
    background-image: linear-gradient(
        100deg,
        transparent 0 10px,
        #38bdf8 11px 20px,
        transparent 21px 30px,
        #38bdf8 31px 40px,
        transparent 41px 50px,
        #38bdf8 51px
      );
  }
  h2,
    h3,
    > p,
    figure p,
    figcaption,
    li,
    li::before {
    --tw-text-opacity: 1;
    color: rgb(255 255 255 / var(--tw-text-opacity));
  }
  h2 {
    font-family: Oswald, sans-serif;
  }
  h2 {
    font-size: 72px;
  }
  h2.shout {
    font-size: 4.5rem;
    line-height: 1;
  }
  a {
    --tw-text-opacity: 1;
    color: rgb(56 189 248 / var(--tw-text-opacity));
  }
  ol,
    ul {
    line-height: 1.8;
  }
  ol,
    ul {
    li {
      font-size: 34px;
    }
  }
  footer > p {
    margin-bottom: 0px;
  }
  footer > p {
    line-height: 40px;
  }
}

.scrollbar {
  &::-webkit-scrollbar {
    width: 18px;
  }
  &::-webkit-scrollbar-track,
    &::-webkit-scrollbar-thumb {
    border-radius: 0.375rem;
  }
  &::-webkit-scrollbar-track {
    --tw-bg-opacity: 1;
    background-color: rgb(15 23 42 / var(--tw-bg-opacity));
  }
  &::-webkit-scrollbar-thumb {
    --tw-bg-opacity: 1;
    background-color: rgb(56 189 248 / var(--tw-bg-opacity));
  }
}

@supports not selector(::-webkit-scrollbar) {
  .scrollbar {
    scrollbar-color: #38bdf8 #0f172a;
  }
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.shower :is(.absolute) {
  position: absolute;
}

.shower :is(.relative) {
  position: relative;
}

.shower :is(.left-0) {
  left: 0px;
}

.shower :is(.left-1\/2) {
  left: 50%;
}

.shower :is(.top-0) {
  top: 0px;
}

.shower :is(.top-1\/2) {
  top: 50%;
}

.shower :is(.z-0) {
  z-index: 0;
}

.shower :is(.z-50) {
  z-index: 50;
}

.shower :is(.col-span-2) {
  grid-column: span 2 / span 2;
}

.shower :is(.row-span-1) {
  grid-row: span 1 / span 1;
}

.shower :is(.float-right) {
  float: right;
}

.shower :is(.m-0) {
  margin: 0px;
}

.shower :is(.m-auto) {
  margin: auto;
}

.shower :is(.-mb-2) {
  margin-bottom: -0.5rem;
}

.shower :is(.-ml-1) {
  margin-left: -0.25rem;
}

.shower :is(.mb-0) {
  margin-bottom: 0px;
}

.shower :is(.mb-2) {
  margin-bottom: 0.5rem;
}

.shower :is(.mb-\[140px\]) {
  margin-bottom: 140px;
}

.shower :is(.mr-3) {
  margin-right: 0.75rem;
}

.shower :is(.mt-1) {
  margin-top: 0.25rem;
}

.shower :is(.mt-10) {
  margin-top: 2.5rem;
}

.shower :is(.mt-12) {
  margin-top: 3rem;
}

.shower :is(.mt-20) {
  margin-top: 5rem;
}

.shower :is(.mt-32) {
  margin-top: 8rem;
}

.shower :is(.block) {
  display: block;
}

.shower :is(.flex) {
  display: flex;
}

.shower :is(.inline-flex) {
  display: inline-flex;
}

.shower :is(.grid) {
  display: grid;
}

.shower :is(.hidden) {
  display: none;
}

.shower :is(.h-5) {
  height: 1.25rem;
}

.shower :is(.h-\[calc\(100\%_-_200px\)\]) {
  height: calc(100% - 200px);
}

.shower :is(.h-\[var\(--fly-container-h\)\]) {
  height: var(--fly-container-h);
}

.shower :is(.h-\[var\(--fly-logo-h\)\]) {
  height: var(--fly-logo-h);
}

.shower :is(.h-full) {
  height: 100%;
}

.shower :is(.w-5) {
  width: 1.25rem;
}

.shower :is(.w-\[1000px\]) {
  width: 1000px;
}

.shower :is(.w-\[285px\]) {
  width: 285px;
}

.shower :is(.w-\[300px\]) {
  width: 300px;
}

.shower :is(.w-\[400px\]) {
  width: 400px;
}

.shower :is(.w-\[var\(--fly-container-w\)\]) {
  width: var(--fly-container-w);
}

.shower :is(.w-\[var\(--fly-logo-w\)\]) {
  width: var(--fly-logo-w);
}

.shower :is(.-translate-x-1\/2) {
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.shower :is(.-translate-y-1\/2) {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.shower :is(.-translate-y-\[250px\]) {
  --tw-translate-y: -250px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.shower :is(.translate-x-\[50px\]) {
  --tw-translate-x: 50px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.shower :is(.translate-x-\[650px\]) {
  --tw-translate-x: 650px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.shower :is(.translate-y-\[100px\]) {
  --tw-translate-y: 100px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.shower :is(.translate-y-\[50px\]) {
  --tw-translate-y: 50px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.shower :is(.rotate-45) {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes fly-x {
  from {
    left: 0;
  }

  to {
    left: calc(100% - var(--fly-logo-w));
  }
}

@keyframes fly-y {
  from {
    top: 0;
  }

  to {
    top: calc(100% - var(--fly-logo-h));
  }
}

@keyframes fly-color-x {
  0% {
    --fly-color-x: 0;
  }

  20% {
    --fly-color-x: 2;
  }

  40% {
    --fly-color-x: 4;
  }

  60% {
    --fly-color-x: 1;
  }

  80% {
    --fly-color-x: 3;
  }

  100% {
    --fly-color-x: 0;
  }
}

@keyframes fly-color-y {
  0% {
    --fly-color-y: 0;
  }

  20% {
    --fly-color-y: 2;
  }

  40% {
    --fly-color-y: 4;
  }

  60% {
    --fly-color-y: 1;
  }

  80% {
    --fly-color-y: 3;
  }

  100% {
    --fly-color-y: 0;
  }
}

.shower :is(.animate-fly-logo) {
  animation: fly-x var(--fly-duration-x) linear infinite alternate, fly-y var(--fly-duration-y) linear infinite alternate, fly-color-x calc(var(--fly-duration-x) * 5) step-start infinite, fly-color-y calc(var(--fly-duration-y) * 5) step-start infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.shower :is(.animate-spin) {
  animation: spin 1s linear infinite;
}

.shower :is(.cursor-not-allowed) {
  cursor: not-allowed;
}

.shower :is(.auto-rows-\[100px\]) {
  grid-auto-rows: 100px;
}

.shower :is(.grid-cols-2) {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.shower :is(.flex-col) {
  flex-direction: column;
}

.shower :is(.items-center) {
  align-items: center;
}

.shower :is(.justify-end) {
  justify-content: flex-end;
}

.shower :is(.justify-center) {
  justify-content: center;
}

.shower :is(.gap-4) {
  gap: 1rem;
}

.shower :is(.overflow-visible) {
  overflow: visible;
}

.shower :is(.rounded-lg) {
  border-radius: 0.5rem;
}

.shower :is(.rounded-md) {
  border-radius: 0.375rem;
}

.shower :is(.rounded-xl) {
  border-radius: 0.75rem;
}

.shower :is(.border) {
  border-width: 1px;
}

.shower :is(.border-2) {
  border-width: 2px;
}

.shower :is(.border-none) {
  border-style: none;
}

.shower :is(.border-white) {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

.shower :is(.bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.shower :is(.p-0) {
  padding: 0px;
}

.shower :is(.px-2) {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.shower :is(.px-6) {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.shower :is(.py-1) {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.shower :is(.py-4) {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.shower :is(.pt-2) {
  padding-top: 0.5rem;
}

.shower :is(.text-center) {
  text-align: center;
}

.shower :is(.font-oswald) {
  font-family: Oswald, sans-serif;
}

.shower :is(.text-2xl) {
  font-size: 1.5rem;
  line-height: 2rem;
}

.shower :is(.text-4xl) {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.shower :is(.text-5xl) {
  font-size: 3rem;
  line-height: 1;
}

.shower :is(.text-6xl) {
  font-size: 3.75rem;
  line-height: 1;
}

.shower :is(.leading-6) {
  line-height: 1.5rem;
}

.shower :is(.text-red) {
  --tw-text-opacity: 1;
  color: rgb(255 0 0 / var(--tw-text-opacity));
}

.shower :is(.text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.shower :is(.opacity-25) {
  opacity: 0.25;
}

.shower :is(.opacity-75) {
  opacity: 0.75;
}

.shower :is(.outline) {
  outline-style: solid;
}

.shower :is(.filter) {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.shower :is(.transition) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.shower :is(.duration-150) {
  transition-duration: 150ms;
}

.shower :is(.ease-in-out) {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.shower  :is(.bg) {
  background-image: url('../themes/tw/pictures/bg.png');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

.shower :is(.animate-color-fly-logo) {
  color: hsl(calc(360 / 25 * (var(--fly-color-y) * 5 + var(--fly-color-x)) * 1deg) 100% 50%);
}

.shower :is(.before\:bg-blue)::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(56 189 248 / var(--tw-bg-opacity));
}

.shower :is(.after\:text-red)::after {
  content: var(--tw-content);
  --tw-text-opacity: 1;
  color: rgb(255 0 0 / var(--tw-text-opacity));
}

.shower :is(.after\:content-\[\'\*\'\])::after {
  --tw-content: '*';
  content: var(--tw-content);
}

.shower :is(.group:has(#cases.active + #libs:not(.active)) .group-has-\[\#cases\.active_\+_\#libs\:not\(\.active\)\]\:block) {
  display: block;
}

.shower :is(.dark\:bg-purple-dark:where(.dark, .dark *)) {
  --tw-bg-opacity: 1;
  background-color: rgb(15 23 42 / var(--tw-bg-opacity));
}

.shower :is(.dark\:text-\[\#fff\]:where(.dark, .dark *)) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.shower :is(.dark\:text-purple-dark:where(.dark, .dark *)) {
  --tw-text-opacity: 1;
  color: rgb(15 23 42 / var(--tw-text-opacity));
}

.shower :is(.dark\:text-white:where(.dark, .dark *)) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
